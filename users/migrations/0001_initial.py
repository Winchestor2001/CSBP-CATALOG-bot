# Generated by Django 5.2.6 on 2025-10-01 16:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('chat_id', models.BigIntegerField(db_index=True, help_text='ID канала/группы (например, -1001234567890).', verbose_name='Chat ID')),
                ('username', models.CharField(blank=True, help_text='Напр.: my_channel (без @)', max_length=150, null=True, verbose_name='Username без @')),
                ('invite_link', models.URLField(blank=True, help_text='Если приватный канал/чат.', null=True, verbose_name='Пригласительная ссылка')),
                ('is_group', models.BooleanField(default=False, verbose_name='Это группа/чат')),
                ('is_required', models.BooleanField(default=True, verbose_name='Обязательная подписка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
            ],
            options={
                'verbose_name': 'Канал/группа для подписки',
                'verbose_name_plural': 'Каналы/группы для подписки',
                'ordering': ('sort_order', 'title'),
            },
        ),
        migrations.CreateModel(
            name='TelegramAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Username без @')),
                ('telegram_id', models.BigIntegerField(db_index=True, help_text='Уникальный идентификатор администратора в Telegram (@raw_data_bot)', unique=True, verbose_name='Telegram ID')),
                ('is_active', models.BooleanField(default=True, help_text='Если выключено — уведомления администратору не будут отправляться', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'TG админ',
                'verbose_name_plural': 'TG админы',
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.BigIntegerField(db_index=True, help_text='Уникальный идентификатор пользователя в Telegram', unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, help_text='@username, если установлен', max_length=150, null=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия')),
                ('language_code', models.CharField(blank=True, help_text='Код языка, который передаёт Telegram (например, ru, en)', max_length=12, null=True, verbose_name='Язык интерфейса')),
                ('is_premium', models.BooleanField(default=False, help_text='Есть ли у пользователя Telegram Premium', verbose_name='Премиум')),
                ('is_blocked', models.BooleanField(default=False, help_text='Заблокировал ли пользователь бота', verbose_name='Заблокирован')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'TG пользователь',
                'verbose_name_plural': 'TG пользователи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(blank=True, db_index=True, null=True, verbose_name='Telegram ID')),
                ('telegram_username', models.CharField(blank=True, max_length=64, null=True, verbose_name='Username без @')),
                ('receive_bot_notifications', models.BooleanField(default=True, verbose_name='Получать уведомления в Telegram')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
    ]
